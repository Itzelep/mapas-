# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['PrecipitationMap, generate_fake_precipitation_data']

# %% ../nbs/00_core.ipynb 3
# Contenido del archivo map_precipitation.py

import numpy as np
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature

class PrecipitationMap:
    def __init__(self, data, years):
        self.data = np.array(data)
        self.years = years

    def plot(self, title='Precipitation Map', cmap='Blues'):
        fig = plt.figure(figsize=(10, 8))
        
        # Definir la proyección y agregar características del mapa
        ax = fig.add_subplot(1, 1, 1, projection=ccrs.PlateCarree())
        ax.coastlines(resolution='50m', linewidth=1)
        ax.add_feature(cfeature.BORDERS, linewidth=0.5, linestyle=':')
        ax.add_feature(cfeature.LAND, facecolor='lightgray')
        ax.add_feature(cfeature.OCEAN, facecolor='lightblue')
        
        # Mostrar los datos de precipitación para los años seleccionados
        for year_idx in range(self.data.shape[0]):
            im = ax.imshow(self.data[year_idx], origin='upper', extent=[-180, 180, -90, 90],
                           transform=ccrs.PlateCarree(), cmap=cmap, alpha=0.5)
        
        # Configuración de título y etiquetas
        plt.title(f'{title} ({self.years[0]} - {self.years[-1]})')
        ax.set_xlabel('Longitude')
        ax.set_ylabel('Latitude')
        
        # Añadir barra de color solo una vez
        plt.colorbar(im, ax=ax, label='Precipitation (mm)')
        
        plt.tight_layout()
        plt.show()

def generate_fake_precipitation_data(start_year, end_year):
    # Generar datos simulados de precipitación para los años especificados
    num_years = end_year - start_year + 1
    data = np.random.rand(num_years, 180, 360) * 100  # Datos de precipitación aleatorios para todo el mundo
    return data
